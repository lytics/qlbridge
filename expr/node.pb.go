// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.19.6
// source: expr/node.proto

package expr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The generic Expr
type ExprPb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op    *int32    `protobuf:"varint,1,opt,name=op" json:"op,omitempty"`
	Args  []*ExprPb `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
	Ident *string   `protobuf:"bytes,4,opt,name=ident" json:"ident,omitempty"`
	Val   *string   `protobuf:"bytes,5,opt,name=val" json:"val,omitempty"`
	Ival  *int64    `protobuf:"varint,6,opt,name=ival" json:"ival,omitempty"`
	Bval  *bool     `protobuf:"varint,7,opt,name=bval" json:"bval,omitempty"`
	Fval  *float64  `protobuf:"fixed64,8,opt,name=fval" json:"fval,omitempty"`
}

func (x *ExprPb) Reset() {
	*x = ExprPb{}
	mi := &file_expr_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExprPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExprPb) ProtoMessage() {}

func (x *ExprPb) ProtoReflect() protoreflect.Message {
	mi := &file_expr_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExprPb.ProtoReflect.Descriptor instead.
func (*ExprPb) Descriptor() ([]byte, []int) {
	return file_expr_node_proto_rawDescGZIP(), []int{0}
}

func (x *ExprPb) GetOp() int32 {
	if x != nil && x.Op != nil {
		return *x.Op
	}
	return 0
}

func (x *ExprPb) GetArgs() []*ExprPb {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ExprPb) GetIdent() string {
	if x != nil && x.Ident != nil {
		return *x.Ident
	}
	return ""
}

func (x *ExprPb) GetVal() string {
	if x != nil && x.Val != nil {
		return *x.Val
	}
	return ""
}

func (x *ExprPb) GetIval() int64 {
	if x != nil && x.Ival != nil {
		return *x.Ival
	}
	return 0
}

func (x *ExprPb) GetBval() bool {
	if x != nil && x.Bval != nil {
		return *x.Bval
	}
	return false
}

func (x *ExprPb) GetFval() float64 {
	if x != nil && x.Fval != nil {
		return *x.Fval
	}
	return 0
}

// The generic Node, must be exactly one of these types
type NodePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bn    *BinaryNodePb   `protobuf:"bytes,1,opt,name=bn" json:"bn,omitempty"`
	Booln *BooleanNodePb  `protobuf:"bytes,2,opt,name=booln" json:"booln,omitempty"`
	Un    *UnaryNodePb    `protobuf:"bytes,3,opt,name=un" json:"un,omitempty"`
	Fn    *FuncNodePb     `protobuf:"bytes,4,opt,name=fn" json:"fn,omitempty"`
	Tn    *TriNodePb      `protobuf:"bytes,5,opt,name=tn" json:"tn,omitempty"`
	An    *ArrayNodePb    `protobuf:"bytes,6,opt,name=an" json:"an,omitempty"`
	Nn    *NumberNodePb   `protobuf:"bytes,10,opt,name=nn" json:"nn,omitempty"`
	Vn    *ValueNodePb    `protobuf:"bytes,11,opt,name=vn" json:"vn,omitempty"`
	In    *IdentityNodePb `protobuf:"bytes,12,opt,name=in" json:"in,omitempty"`
	Sn    *StringNodePb   `protobuf:"bytes,13,opt,name=sn" json:"sn,omitempty"`
	Incn  *IncludeNodePb  `protobuf:"bytes,14,opt,name=incn" json:"incn,omitempty"`
	Niln  *NullNodePb     `protobuf:"bytes,15,opt,name=niln" json:"niln,omitempty"`
}

func (x *NodePb) Reset() {
	*x = NodePb{}
	mi := &file_expr_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePb) ProtoMessage() {}

func (x *NodePb) ProtoReflect() protoreflect.Message {
	mi := &file_expr_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePb.ProtoReflect.Descriptor instead.
func (*NodePb) Descriptor() ([]byte, []int) {
	return file_expr_node_proto_rawDescGZIP(), []int{1}
}

func (x *NodePb) GetBn() *BinaryNodePb {
	if x != nil {
		return x.Bn
	}
	return nil
}

func (x *NodePb) GetBooln() *BooleanNodePb {
	if x != nil {
		return x.Booln
	}
	return nil
}

func (x *NodePb) GetUn() *UnaryNodePb {
	if x != nil {
		return x.Un
	}
	return nil
}

func (x *NodePb) GetFn() *FuncNodePb {
	if x != nil {
		return x.Fn
	}
	return nil
}

func (x *NodePb) GetTn() *TriNodePb {
	if x != nil {
		return x.Tn
	}
	return nil
}

func (x *NodePb) GetAn() *ArrayNodePb {
	if x != nil {
		return x.An
	}
	return nil
}

func (x *NodePb) GetNn() *NumberNodePb {
	if x != nil {
		return x.Nn
	}
	return nil
}

func (x *NodePb) GetVn() *ValueNodePb {
	if x != nil {
		return x.Vn
	}
	return nil
}

func (x *NodePb) GetIn() *IdentityNodePb {
	if x != nil {
		return x.In
	}
	return nil
}

func (x *NodePb) GetSn() *StringNodePb {
	if x != nil {
		return x.Sn
	}
	return nil
}

func (x *NodePb) GetIncn() *IncludeNodePb {
	if x != nil {
		return x.Incn
	}
	return nil
}

func (x *NodePb) GetNiln() *NullNodePb {
	if x != nil {
		return x.Niln
	}
	return nil
}

// Binary Node, two child args
type BinaryNodePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op    *int32    `protobuf:"varint,1,req,name=op" json:"op,omitempty"`
	Paren *bool     `protobuf:"varint,2,opt,name=paren" json:"paren,omitempty"`
	Args  []*NodePb `protobuf:"bytes,3,rep,name=args" json:"args,omitempty"`
}

func (x *BinaryNodePb) Reset() {
	*x = BinaryNodePb{}
	mi := &file_expr_node_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BinaryNodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryNodePb) ProtoMessage() {}

func (x *BinaryNodePb) ProtoReflect() protoreflect.Message {
	mi := &file_expr_node_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryNodePb.ProtoReflect.Descriptor instead.
func (*BinaryNodePb) Descriptor() ([]byte, []int) {
	return file_expr_node_proto_rawDescGZIP(), []int{2}
}

func (x *BinaryNodePb) GetOp() int32 {
	if x != nil && x.Op != nil {
		return *x.Op
	}
	return 0
}

func (x *BinaryNodePb) GetParen() bool {
	if x != nil && x.Paren != nil {
		return *x.Paren
	}
	return false
}

func (x *BinaryNodePb) GetArgs() []*NodePb {
	if x != nil {
		return x.Args
	}
	return nil
}

// Boolean Node, n child args
type BooleanNodePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op   *int32    `protobuf:"varint,1,req,name=op" json:"op,omitempty"`
	Args []*NodePb `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
}

func (x *BooleanNodePb) Reset() {
	*x = BooleanNodePb{}
	mi := &file_expr_node_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BooleanNodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanNodePb) ProtoMessage() {}

func (x *BooleanNodePb) ProtoReflect() protoreflect.Message {
	mi := &file_expr_node_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanNodePb.ProtoReflect.Descriptor instead.
func (*BooleanNodePb) Descriptor() ([]byte, []int) {
	return file_expr_node_proto_rawDescGZIP(), []int{3}
}

func (x *BooleanNodePb) GetOp() int32 {
	if x != nil && x.Op != nil {
		return *x.Op
	}
	return 0
}

func (x *BooleanNodePb) GetArgs() []*NodePb {
	if x != nil {
		return x.Args
	}
	return nil
}

// Include Node, two child args
type IncludeNodePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op       *int32          `protobuf:"varint,1,req,name=op" json:"op,omitempty"`
	Negated  *bool           `protobuf:"varint,2,req,name=negated" json:"negated,omitempty"`
	Identity *IdentityNodePb `protobuf:"bytes,3,req,name=identity" json:"identity,omitempty"`
}

func (x *IncludeNodePb) Reset() {
	*x = IncludeNodePb{}
	mi := &file_expr_node_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncludeNodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncludeNodePb) ProtoMessage() {}

func (x *IncludeNodePb) ProtoReflect() protoreflect.Message {
	mi := &file_expr_node_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncludeNodePb.ProtoReflect.Descriptor instead.
func (*IncludeNodePb) Descriptor() ([]byte, []int) {
	return file_expr_node_proto_rawDescGZIP(), []int{4}
}

func (x *IncludeNodePb) GetOp() int32 {
	if x != nil && x.Op != nil {
		return *x.Op
	}
	return 0
}

func (x *IncludeNodePb) GetNegated() bool {
	if x != nil && x.Negated != nil {
		return *x.Negated
	}
	return false
}

func (x *IncludeNodePb) GetIdentity() *IdentityNodePb {
	if x != nil {
		return x.Identity
	}
	return nil
}

// Unary Node, one child
type UnaryNodePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op    *int32  `protobuf:"varint,1,req,name=op" json:"op,omitempty"`
	Paren *bool   `protobuf:"varint,2,opt,name=paren" json:"paren,omitempty"`
	Arg   *NodePb `protobuf:"bytes,3,req,name=arg" json:"arg,omitempty"`
}

func (x *UnaryNodePb) Reset() {
	*x = UnaryNodePb{}
	mi := &file_expr_node_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnaryNodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnaryNodePb) ProtoMessage() {}

func (x *UnaryNodePb) ProtoReflect() protoreflect.Message {
	mi := &file_expr_node_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnaryNodePb.ProtoReflect.Descriptor instead.
func (*UnaryNodePb) Descriptor() ([]byte, []int) {
	return file_expr_node_proto_rawDescGZIP(), []int{5}
}

func (x *UnaryNodePb) GetOp() int32 {
	if x != nil && x.Op != nil {
		return *x.Op
	}
	return 0
}

func (x *UnaryNodePb) GetParen() bool {
	if x != nil && x.Paren != nil {
		return *x.Paren
	}
	return false
}

func (x *UnaryNodePb) GetArg() *NodePb {
	if x != nil {
		return x.Arg
	}
	return nil
}

// Func Node, args are children
type FuncNodePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string   `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Args []*NodePb `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
}

func (x *FuncNodePb) Reset() {
	*x = FuncNodePb{}
	mi := &file_expr_node_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FuncNodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncNodePb) ProtoMessage() {}

func (x *FuncNodePb) ProtoReflect() protoreflect.Message {
	mi := &file_expr_node_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncNodePb.ProtoReflect.Descriptor instead.
func (*FuncNodePb) Descriptor() ([]byte, []int) {
	return file_expr_node_proto_rawDescGZIP(), []int{6}
}

func (x *FuncNodePb) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FuncNodePb) GetArgs() []*NodePb {
	if x != nil {
		return x.Args
	}
	return nil
}

// Tri Node, may hve children
type TriNodePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op   *int32    `protobuf:"varint,1,req,name=op" json:"op,omitempty"`
	Args []*NodePb `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
}

func (x *TriNodePb) Reset() {
	*x = TriNodePb{}
	mi := &file_expr_node_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriNodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriNodePb) ProtoMessage() {}

func (x *TriNodePb) ProtoReflect() protoreflect.Message {
	mi := &file_expr_node_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriNodePb.ProtoReflect.Descriptor instead.
func (*TriNodePb) Descriptor() ([]byte, []int) {
	return file_expr_node_proto_rawDescGZIP(), []int{7}
}

func (x *TriNodePb) GetOp() int32 {
	if x != nil && x.Op != nil {
		return *x.Op
	}
	return 0
}

func (x *TriNodePb) GetArgs() []*NodePb {
	if x != nil {
		return x.Args
	}
	return nil
}

// Array Node
type ArrayNodePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wrap *int32    `protobuf:"varint,1,req,name=wrap" json:"wrap,omitempty"`
	Args []*NodePb `protobuf:"bytes,3,rep,name=args" json:"args,omitempty"`
}

func (x *ArrayNodePb) Reset() {
	*x = ArrayNodePb{}
	mi := &file_expr_node_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArrayNodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayNodePb) ProtoMessage() {}

func (x *ArrayNodePb) ProtoReflect() protoreflect.Message {
	mi := &file_expr_node_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayNodePb.ProtoReflect.Descriptor instead.
func (*ArrayNodePb) Descriptor() ([]byte, []int) {
	return file_expr_node_proto_rawDescGZIP(), []int{8}
}

func (x *ArrayNodePb) GetWrap() int32 {
	if x != nil && x.Wrap != nil {
		return *x.Wrap
	}
	return 0
}

func (x *ArrayNodePb) GetArgs() []*NodePb {
	if x != nil {
		return x.Args
	}
	return nil
}

// String literal, no children
type StringNodePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Noquote *bool   `protobuf:"varint,1,opt,name=noquote" json:"noquote,omitempty"`
	Quote   *int32  `protobuf:"varint,2,opt,name=quote" json:"quote,omitempty"`
	Text    *string `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
}

func (x *StringNodePb) Reset() {
	*x = StringNodePb{}
	mi := &file_expr_node_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNodePb) ProtoMessage() {}

func (x *StringNodePb) ProtoReflect() protoreflect.Message {
	mi := &file_expr_node_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringNodePb.ProtoReflect.Descriptor instead.
func (*StringNodePb) Descriptor() ([]byte, []int) {
	return file_expr_node_proto_rawDescGZIP(), []int{9}
}

func (x *StringNodePb) GetNoquote() bool {
	if x != nil && x.Noquote != nil {
		return *x.Noquote
	}
	return false
}

func (x *StringNodePb) GetQuote() int32 {
	if x != nil && x.Quote != nil {
		return *x.Quote
	}
	return 0
}

func (x *StringNodePb) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

// Identity
type IdentityNodePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quote *int32  `protobuf:"varint,1,opt,name=quote" json:"quote,omitempty"`
	Text  *string `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
}

func (x *IdentityNodePb) Reset() {
	*x = IdentityNodePb{}
	mi := &file_expr_node_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityNodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityNodePb) ProtoMessage() {}

func (x *IdentityNodePb) ProtoReflect() protoreflect.Message {
	mi := &file_expr_node_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityNodePb.ProtoReflect.Descriptor instead.
func (*IdentityNodePb) Descriptor() ([]byte, []int) {
	return file_expr_node_proto_rawDescGZIP(), []int{10}
}

func (x *IdentityNodePb) GetQuote() int32 {
	if x != nil && x.Quote != nil {
		return *x.Quote
	}
	return 0
}

func (x *IdentityNodePb) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

// Number Node
type NumberNodePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Isint   *bool    `protobuf:"varint,1,opt,name=isint" json:"isint,omitempty"`
	Isfloat *bool    `protobuf:"varint,2,opt,name=isfloat" json:"isfloat,omitempty"`
	Iv      *int64   `protobuf:"varint,3,req,name=iv" json:"iv,omitempty"`
	Fv      *float64 `protobuf:"fixed64,4,req,name=fv" json:"fv,omitempty"`
	Text    *string  `protobuf:"bytes,5,req,name=text" json:"text,omitempty"`
}

func (x *NumberNodePb) Reset() {
	*x = NumberNodePb{}
	mi := &file_expr_node_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NumberNodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberNodePb) ProtoMessage() {}

func (x *NumberNodePb) ProtoReflect() protoreflect.Message {
	mi := &file_expr_node_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberNodePb.ProtoReflect.Descriptor instead.
func (*NumberNodePb) Descriptor() ([]byte, []int) {
	return file_expr_node_proto_rawDescGZIP(), []int{11}
}

func (x *NumberNodePb) GetIsint() bool {
	if x != nil && x.Isint != nil {
		return *x.Isint
	}
	return false
}

func (x *NumberNodePb) GetIsfloat() bool {
	if x != nil && x.Isfloat != nil {
		return *x.Isfloat
	}
	return false
}

func (x *NumberNodePb) GetIv() int64 {
	if x != nil && x.Iv != nil {
		return *x.Iv
	}
	return 0
}

func (x *NumberNodePb) GetFv() float64 {
	if x != nil && x.Fv != nil {
		return *x.Fv
	}
	return 0
}

func (x *NumberNodePb) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

// Value Node
type ValueNodePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valuetype *int32 `protobuf:"varint,1,req,name=valuetype" json:"valuetype,omitempty"`
	Value     []byte `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
}

func (x *ValueNodePb) Reset() {
	*x = ValueNodePb{}
	mi := &file_expr_node_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValueNodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueNodePb) ProtoMessage() {}

func (x *ValueNodePb) ProtoReflect() protoreflect.Message {
	mi := &file_expr_node_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueNodePb.ProtoReflect.Descriptor instead.
func (*ValueNodePb) Descriptor() ([]byte, []int) {
	return file_expr_node_proto_rawDescGZIP(), []int{12}
}

func (x *ValueNodePb) GetValuetype() int32 {
	if x != nil && x.Valuetype != nil {
		return *x.Valuetype
	}
	return 0
}

func (x *ValueNodePb) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// NullNode
type NullNodePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Niltype *int32 `protobuf:"varint,1,opt,name=niltype" json:"niltype,omitempty"`
}

func (x *NullNodePb) Reset() {
	*x = NullNodePb{}
	mi := &file_expr_node_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NullNodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullNodePb) ProtoMessage() {}

func (x *NullNodePb) ProtoReflect() protoreflect.Message {
	mi := &file_expr_node_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullNodePb.ProtoReflect.Descriptor instead.
func (*NullNodePb) Descriptor() ([]byte, []int) {
	return file_expr_node_proto_rawDescGZIP(), []int{13}
}

func (x *NullNodePb) GetNiltype() int32 {
	if x != nil && x.Niltype != nil {
		return *x.Niltype
	}
	return 0
}

var File_expr_node_proto protoreflect.FileDescriptor

var file_expr_node_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x78, 0x70, 0x72, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x65, 0x78, 0x70, 0x72, 0x22, 0x9e, 0x01, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x72,
	0x50, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x6f, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x50, 0x62, 0x52, 0x04,
	0x61, 0x72, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x76, 0x61, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x62, 0x76, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x66, 0x76, 0x61, 0x6c, 0x22, 0xc0, 0x03, 0x0a, 0x06, 0x4e, 0x6f, 0x64,
	0x65, 0x50, 0x62, 0x12, 0x22, 0x0a, 0x02, 0x62, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x4e, 0x6f, 0x64,
	0x65, 0x50, 0x62, 0x52, 0x02, 0x62, 0x6e, 0x12, 0x29, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x52, 0x05, 0x62, 0x6f, 0x6f,
	0x6c, 0x6e, 0x12, 0x21, 0x0a, 0x02, 0x75, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x50,
	0x62, 0x52, 0x02, 0x75, 0x6e, 0x12, 0x20, 0x0a, 0x02, 0x66, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x4e, 0x6f, 0x64,
	0x65, 0x50, 0x62, 0x52, 0x02, 0x66, 0x6e, 0x12, 0x1f, 0x0a, 0x02, 0x74, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x54, 0x72, 0x69, 0x4e, 0x6f,
	0x64, 0x65, 0x50, 0x62, 0x52, 0x02, 0x74, 0x6e, 0x12, 0x21, 0x0a, 0x02, 0x61, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x52, 0x02, 0x61, 0x6e, 0x12, 0x22, 0x0a, 0x02, 0x6e,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x52, 0x02, 0x6e, 0x6e, 0x12,
	0x21, 0x0a, 0x02, 0x76, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78,
	0x70, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x52, 0x02,
	0x76, 0x6e, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x6f,
	0x64, 0x65, 0x50, 0x62, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x27, 0x0a, 0x04,
	0x69, 0x6e, 0x63, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x78, 0x70,
	0x72, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x52,
	0x04, 0x69, 0x6e, 0x63, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x6e, 0x69, 0x6c, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x4e,
	0x6f, 0x64, 0x65, 0x50, 0x62, 0x52, 0x04, 0x6e, 0x69, 0x6c, 0x6e, 0x22, 0x56, 0x0a, 0x0c, 0x42,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x52, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x22, 0x41, 0x0a, 0x0d, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x4e, 0x6f,
	0x64, 0x65, 0x50, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x02, 0x6f, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62,
	0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x6b, 0x0a, 0x0d, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0x53, 0x0a, 0x0b, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x4e, 0x6f, 0x64, 0x65,
	0x50, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02,
	0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x03, 0x61, 0x72, 0x67, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x50, 0x62, 0x52, 0x03, 0x61, 0x72, 0x67, 0x22, 0x42, 0x0a, 0x0a, 0x46, 0x75, 0x6e, 0x63,
	0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x72,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x3d, 0x0a, 0x09,
	0x54, 0x72, 0x69, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x50, 0x62, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x43, 0x0a, 0x0b, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x72,
	0x61, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x77, 0x72, 0x61, 0x70, 0x12, 0x20,
	0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65,
	0x78, 0x70, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x22, 0x52, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6e, 0x6f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x22, 0x3a, 0x0a, 0x0e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x22, 0x72, 0x0a, 0x0c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x76, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x69, 0x76,
	0x12, 0x0e, 0x0a, 0x02, 0x66, 0x76, 0x18, 0x04, 0x20, 0x02, 0x28, 0x01, 0x52, 0x02, 0x66, 0x76,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x22, 0x41, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x50, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x0a, 0x4e, 0x75, 0x6c, 0x6c, 0x4e,
	0x6f, 0x64, 0x65, 0x50, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x69, 0x6c, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x69, 0x6c, 0x74, 0x79, 0x70, 0x65, 0x42,
	0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x2f, 0x71, 0x6c, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2f, 0x65, 0x78,
	0x70, 0x72,
}

var (
	file_expr_node_proto_rawDescOnce sync.Once
	file_expr_node_proto_rawDescData = file_expr_node_proto_rawDesc
)

func file_expr_node_proto_rawDescGZIP() []byte {
	file_expr_node_proto_rawDescOnce.Do(func() {
		file_expr_node_proto_rawDescData = protoimpl.X.CompressGZIP(file_expr_node_proto_rawDescData)
	})
	return file_expr_node_proto_rawDescData
}

var file_expr_node_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_expr_node_proto_goTypes = []any{
	(*ExprPb)(nil),         // 0: expr.ExprPb
	(*NodePb)(nil),         // 1: expr.NodePb
	(*BinaryNodePb)(nil),   // 2: expr.BinaryNodePb
	(*BooleanNodePb)(nil),  // 3: expr.BooleanNodePb
	(*IncludeNodePb)(nil),  // 4: expr.IncludeNodePb
	(*UnaryNodePb)(nil),    // 5: expr.UnaryNodePb
	(*FuncNodePb)(nil),     // 6: expr.FuncNodePb
	(*TriNodePb)(nil),      // 7: expr.TriNodePb
	(*ArrayNodePb)(nil),    // 8: expr.ArrayNodePb
	(*StringNodePb)(nil),   // 9: expr.StringNodePb
	(*IdentityNodePb)(nil), // 10: expr.IdentityNodePb
	(*NumberNodePb)(nil),   // 11: expr.NumberNodePb
	(*ValueNodePb)(nil),    // 12: expr.ValueNodePb
	(*NullNodePb)(nil),     // 13: expr.NullNodePb
}
var file_expr_node_proto_depIdxs = []int32{
	0,  // 0: expr.ExprPb.args:type_name -> expr.ExprPb
	2,  // 1: expr.NodePb.bn:type_name -> expr.BinaryNodePb
	3,  // 2: expr.NodePb.booln:type_name -> expr.BooleanNodePb
	5,  // 3: expr.NodePb.un:type_name -> expr.UnaryNodePb
	6,  // 4: expr.NodePb.fn:type_name -> expr.FuncNodePb
	7,  // 5: expr.NodePb.tn:type_name -> expr.TriNodePb
	8,  // 6: expr.NodePb.an:type_name -> expr.ArrayNodePb
	11, // 7: expr.NodePb.nn:type_name -> expr.NumberNodePb
	12, // 8: expr.NodePb.vn:type_name -> expr.ValueNodePb
	10, // 9: expr.NodePb.in:type_name -> expr.IdentityNodePb
	9,  // 10: expr.NodePb.sn:type_name -> expr.StringNodePb
	4,  // 11: expr.NodePb.incn:type_name -> expr.IncludeNodePb
	13, // 12: expr.NodePb.niln:type_name -> expr.NullNodePb
	1,  // 13: expr.BinaryNodePb.args:type_name -> expr.NodePb
	1,  // 14: expr.BooleanNodePb.args:type_name -> expr.NodePb
	10, // 15: expr.IncludeNodePb.identity:type_name -> expr.IdentityNodePb
	1,  // 16: expr.UnaryNodePb.arg:type_name -> expr.NodePb
	1,  // 17: expr.FuncNodePb.args:type_name -> expr.NodePb
	1,  // 18: expr.TriNodePb.args:type_name -> expr.NodePb
	1,  // 19: expr.ArrayNodePb.args:type_name -> expr.NodePb
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_expr_node_proto_init() }
func file_expr_node_proto_init() {
	if File_expr_node_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_expr_node_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_expr_node_proto_goTypes,
		DependencyIndexes: file_expr_node_proto_depIdxs,
		MessageInfos:      file_expr_node_proto_msgTypes,
	}.Build()
	File_expr_node_proto = out.File
	file_expr_node_proto_rawDesc = nil
	file_expr_node_proto_goTypes = nil
	file_expr_node_proto_depIdxs = nil
}
